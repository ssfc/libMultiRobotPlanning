name: Build

on: [push, pull_request]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    # Also test debug build, to find potential asserts when running tests
    strategy:
      matrix:
        BUILD_TYPE: ["Release", "Debug"]

    steps:
    - uses: actions/checkout@v2
      with:
        # recursively checkout all submodules
        submodules: 'recursive'

    - name: install dependencies
      run: |
        sudo apt-get install -y g++ cmake libboost-program-options-dev libyaml-cpp-dev clang-tidy clang-format graphviz doxygen
        pip3 install cvxpy matplotlib numpy

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}}

    - name: Test
      run: make run-test
      working-directory: ${{github.workspace}}/build
